{"version":3,"sources":["component/Header.js","component/Home.js","component/Create.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","handleItemClick","e","name","setState","activeItem","state","this","Menu","inverted","to","Item","active","onClick","Component","Home","Create","handleFirstnameChange","firstName","target","value","handleLastnameChange","lastName","handleEmailChange","email","handlePhoneChange","phone","handleIDChange","id","handleNicknameChange","nickName","handleSubmit","preventDefault","alert","history","push","className","onSubmit","type","placeholder","onChange","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0b3cab25.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Menu } from 'semantic-ui-react';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            activeItem: 'home'\r\n        }\r\n    }\r\n\r\n    handleItemClick = (e, { name }) => this.setState({ \r\n        activeItem: name \r\n    })\r\n\r\n    render(){\r\n        const { activeItem } = this.state.activeItem;\r\n        return(\r\n\r\n            <div>\r\n                <Menu inverted>\r\n                    <Link to=\"/10110sbk\">\r\n                    <Menu.Item\r\n                    name='home'\r\n                    active={activeItem === 'home'}\r\n                    onClick={this.handleItemClick}\r\n                    />\r\n                    </Link>\r\n                    \r\n                    <Link to=\"/create\">\r\n                    <Menu.Item\r\n                    name='create'\r\n                    active={activeItem === 'create'}\r\n                    onClick={this.handleItemClick}\r\n                    />\r\n                    </Link>\r\n      </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React,{Component} from 'react';\r\n\r\nclass Home extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <br></br>\r\n                <h1>\r\n                    Hello This is Home Page\r\n                </h1>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react'\r\n\r\n\r\nclass Create extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            phone: '',\r\n            id: '',\r\n            nickName: '',\r\n\r\n        }\r\n    }\r\n\r\n    handleFirstnameChange = (e) =>{\r\n        this.setState({\r\n            firstName : e.target.value\r\n        });\r\n    }\r\n\r\n    handleLastnameChange = (e) =>{\r\n        this.setState({\r\n            lastName : e.target.value\r\n        })\r\n    }\r\n\r\n    handleEmailChange = (e) =>{\r\n        this.setState({\r\n            email : e.target.value\r\n        })\r\n    }\r\n\r\n    handlePhoneChange = (e) =>{\r\n        this.setState({\r\n            phone : e.target.value\r\n        })\r\n    }\r\n\r\n    handleIDChange = (e) =>{\r\n        this.setState({\r\n            id : e.target.value\r\n        })\r\n    }\r\n\r\n    handleNicknameChange = (e) =>{\r\n        this.setState({\r\n            nickName : e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        alert(this.state.firstName + \" \"  + this.state.lastName + \" \" + this.state.email\r\n        + \" \" + this.state.phone +  \" \" + this.state.id + this.state.nickName );\r\n        this.props.history.push(\"/10110sbk\");\r\n            \r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        return (\r\n\r\n            <div>\r\n                <br></br>\r\n                <h1>\r\n                    create your account\r\n\r\n\r\n                </h1>\r\n\r\n                <form className=\"ui form\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"unstackable two fields\">\r\n                        <div className=\"required field\">\r\n                        <label>First name</label>\r\n                        <div className=\"ui input\">\r\n                            <input name =\"firstName\" \r\n                            type=\"text\" \r\n                            placeholder=\"First name\"\r\n                            onChange={this.handleFirstnameChange} /></div>\r\n                        </div>\r\n                        <div className=\"required field\">\r\n                        <label>Last name</label>\r\n                        <div className=\"ui input\">\r\n                            <input name =\"lastName\" \r\n                            type=\"text\" \r\n                            placeholder=\"Last name\"\r\n                            onChange={this.handleLastnameChange} /></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"two fields\">\r\n                        <div className=\"required field\">\r\n                        <label>Email</label>\r\n                        <div className=\"ui input\">\r\n                            <input name =\"email\" \r\n                            type=\"text\" \r\n                            placeholder=\"example : user@gmail.com\"\r\n                            onChange={this.handleEmailChange} /></div>\r\n                        </div>\r\n                        <div className=\"required field\">\r\n                        <label>Phone</label>\r\n                        <div className=\"ui input\">\r\n                            <input name=\"phone\"\r\n                             type=\"text\" \r\n                             placeholder=\"xxx-xxxxxxx\"\r\n                             onChange={this.handlePhoneChange} /></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"two fields\">\r\n                        <div className=\"required field\">\r\n                        <label>Student ID</label>\r\n                        <div className=\"ui input\">\r\n                            <input name=\"id\" \r\n                            type=\"text\" \r\n                            placeholder=\"5910xxxxxx\"\r\n                            onChange={this.handleIDChange} /></div>\r\n                        </div>\r\n                        <div className=\"required field\">\r\n                        <label>Nickname</label>\r\n                        <div className=\"ui input\">\r\n                            <input name =\"nickName\" \r\n                            type=\"text\" \r\n                            placeholder=\"Nick name\"\r\n                            onChange={this.handleNicknameChange} /></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"ui positive button\">Submit</button>\r\n\r\n                       \r\n                        </form>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Create;\r\n\r\n","import React,{Component} from 'react';\nimport './App.css';\nimport Header from './component/Header';\nimport Home from './component/Home';\nimport Create from './component/Create';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\n\nclass App extends Component{\n\n  render(){\n    return(\n    <Router>\n      <Header/>\n      <div className=\"ui container\">\n          <Switch>\n\n            \n            <Route exact path=\"/10110sbk\" component={Home} />\n            <Route path=\"/create\" component={Create} />\n          </Switch>\n          </div>\n        </Router>\n\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}